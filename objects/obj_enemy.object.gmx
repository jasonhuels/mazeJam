<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (irandom(5)==1 &amp;&amp; instance_exists(obj_player) &amp;&amp; point_distance(x, y, obj_player.x, obj_player.y) &gt; 800 &amp;&amp; !instance_exists(obj_exit)){
    instance_create(x, y, obj_exit);
}

/// Initialize the enemy
depth = -y;
image_speed = 0.25;
path = path_add();

alarm[0] = room_speed/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move towards player
if(global.paused){
    path_end();
    image_speed = 0;
    alarm[0]++;
    exit;
}

if (instance_exists(obj_player) &amp;&amp; point_distance(self.x, self.y, obj_player.x, obj_player.y) &lt; 200){
    get_path_to_player();
}else{
    path_end();
    sprite_index = spr_enemy;
    image_speed = 0.05;
}

alarm[0] = room_speed/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update depth
if(global.paused){
    path_end();
    image_speed = 0;
    speed = 0;
    alarm[0]++;
    exit;
}

depth = -y;

// Change direction
if (instance_exists(obj_player) &amp;&amp; point_distance(x, y, obj_player.x, obj_player.y) &lt; 200){
    if (obj_player.x &gt; x){
        sprite_index = spr_enemy_run;
        image_speed = 0.2;
        image_xscale = 1;
    }else{
        sprite_index = spr_enemy_run;
        image_speed = 0.2;
        image_xscale = -1;
    }

    if(point_distance(x, y, obj_player.x, obj_player.y) &lt; 60){
        path_end();
        direction = point_direction(x, y, obj_player.x, obj_player.y);
        speed = 0.5;
        if(irandom(60)==1){
            audio_sound_gain(snd_enemy,random_range(15,25),1);
            audio_sound_pitch(snd_enemy, random_range(0.5,1.5));
            audio_play_sound(snd_enemy, 25, 0);
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move away from the other enemy
if (x == other.x &amp;&amp; y ==other.y) {
    move(sign(other.id-id), 0);
}

var dir = point_direction(other.x, other.y, x, y);
var hspd = lengthdir_x(0.5, dir);
var vspd = lengthdir_y(0.5, dir);
move(hspd, vspd);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy paths
if (path_exists(path)){
    path_delete(path);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
