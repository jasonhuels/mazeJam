<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.05;

can_move = true;
can_roll = true;
state = "walk";
sniffing = "";
draw_set_font(fn_sniff);
faint = false;

if(room == level){
    instance_create(x,y, obj_lighting);
    instance_create(x,y, obj_smoke);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// destory

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create poop

if(instance_exists(obj_exit)){
    instance_create(x-8*image_xscale,y+8, obj_poop);
    depth = -1000;
    with(obj_exit) sprite_index = spr_boss;
    audio_sound_gain(snd_boss_enter, 5, 0);
    audio_play_sound(snd_boss_enter, 15, 0);
    audio_sound_gain(snd_warp, 5, 0);
    audio_play_sound(snd_warp, 10, 0);
}

if(instance_exists(obj_boss)){
    with(instance_create(x-8*image_xscale,y+8, obj_poop)){
        image_xscale = 10;
        image_yscale = 10;
    }
}

depth = -1001;

//draw_set_font(fn_win);
//sniffing = "YOU WIN!"

with(obj_level){alarm[0] = 210;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset sniffing to empty string
sniffing = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// End sniffing
can_move = true;
can_roll = true;
state = "walk";
if(instance_exists(obj_exit)){
    sniffing = ceil(point_distance(id.x, id.y, obj_exit.x, obj_exit.y));
} else if(instance_exists(obj_carrot)) {
    sniffing = instance_number(obj_carrot);
} else {
    sniffing = "Time to poop on this ass-face!";
}
alarm[3] = 120;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// reset roll
can_roll = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// finish roll

alarm[1] = room_speed*2;
sprite_index = spr_player;
state = "walk";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>camera_movement();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Get input and move
get_input();

// handle pause
if(global.paused){
    image_speed = 0;
    sniffing = "";
    alarm[0]++;
    alarm[1]++;
    alarm[2]++;
    alarm[3]++;
    alarm[4]++;
    exit;
}


if(state == "walk" || state == "sniffing"){ //sprite_index != spr_player_roll
    if(!place_meeting(x,y,obj_enemy)){
        spd = 1.5;
    } else {
        if(spd !=0){
            spd += (-sign(spd)*0.025);
        }else if (!faint){
            faint = true;
            can_move = false;
            can_roll = false;
            image_speed = 0;
            image_yscale = -1;
            audio_play_sound(snd_faint, 50, 0);
            alarm[5] = 180;
        }
    }
} else {
    if(image_index == image_number){
        sprite_index = spr_player;
    }
}

var hspd = (right-left)*spd;
var vspd = (down-up)*spd;

// Move
if (can_move){
    move(hspd, vspd);
}

// adjust depth
//depth = -y;

if (can_roll &amp;&amp; roll){
    audio_sound_gain(snd_roll, random_range(10,15),1);
    audio_sound_pitch(snd_roll, random_range(0.5,1.5));
    audio_play_sound(snd_roll, 25, 0);
    instance_create(x,y,obj_dust);
    image_speed = 0.2;
    state = "roll";
    sprite_index = spr_player_roll;
    spd = 3;
    can_roll = false;
    alarm[0] = 30;
} else if (state != "sniffing" &amp;&amp; sniff){
    audio_sound_gain(snd_sniff, random_range(2,5),1);
    audio_sound_pitch(snd_sniff, random_range(0.5,1));
    audio_play_sound(snd_sniff, 25, 0);
    state = "sniffing";
    image_speed = 0.1;
    sprite_index = spr_player_sniff;
    can_move = false;
    can_roll = false;
    sniffing = "sniff   sniff";
    alarm[2] = 90;
}
if(state == "walk"){
    if (xprevious &lt; x){
        sprite_index = spr_player_run;
        image_xscale = 1;
        image_speed = 0.2;
    }else if(xprevious &gt; x){
        sprite_index = spr_player_run;
        image_xscale = -1;
        image_speed = 0.2;
    }else if (yprevious &lt; y || yprevious &gt; y){
        sprite_index = spr_player_run;
        image_speed = 0.2;
    }else{
        sprite_index = spr_player;
        image_speed = 0.05;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_carrot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other)instance_destroy();
audio_sound_gain(snd_carrot, 5, 0);
audio_sound_pitch(snd_carrot, random_range(0.5,1.5));
audio_play_sound(snd_carrot, 10, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="bhpg_test_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(state == "walk" || state == "sniffing"){
    if(!faint){
        faint = true;
        can_move = false;
        can_roll = false;
        image_speed = 0;
        image_yscale = -1;
        audio_play_sound(snd_faint, 50, 0);
        alarm[5] = 180;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_boss">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!instance_exists(obj_carrot) &amp;&amp; poop and state != "pooping"){
    state = "pooping";
    image_speed= 0.01;
    sprite_index = spr_player_poop;
    can_move = false;
    can_roll = false;
    with(bhpg_test_pattern){
        instance_destroy();
    }
    with(obj_boss){
        alarm[0] = -1;
        alarm[1] = -1;
        image_speed = 0;
        image_index = 1;
    }
    alarm[4] = 180;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_exit">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(poop and state != "pooping"){
    state = "pooping";
    image_speed= 0.01;
    sprite_index = spr_player_poop;
    can_move = false;
    can_roll = false;
    with(obj_enemy){
        if(point_distance(id.x, id.y, obj_player.x, obj_player.y) &lt; 200){
            audio_sound_gain(snd_enemy_die, random_range(1,5), 1);
            audio_sound_pitch(snd_enemy_die, random_range(0.2,1.5));
            audio_play_sound(snd_enemy_die, 25, 0);
            with(instance_create(x,y, obj_enemy_parts)){
                image_index = 0;
            }
            with(instance_create(x,y, obj_enemy_parts)){
                image_index = 1;
            }
            with(instance_create(x,y, obj_enemy_parts)){
                image_index = 2;
            }
            with(instance_create(x,y, obj_enemy_parts)){
                image_index = 3;
            }
            with(instance_create(x,y, obj_enemy_parts)){
                image_index = 4;
            }
            with(instance_create(x,y, obj_enemy_parts)){
                image_index = 5;
            }
            instance_destroy();
        }
    }
    alarm[4] = 180;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text_colour(view_xview[view_current]+view_wview[view_current]/2, view_yview[view_current]+view_hview[view_current]/2, sniffing, c_white, c_white,c_white,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
